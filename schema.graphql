enum GameStatus {
  Waiting
  Started
  Ended
  Aborted
}

enum AffiliateType {
  Creator
  Joined
}

enum AffiliateStatus {
  Waiting
  Finished
  Failed
}

enum GameType {
  Bull
  Bear
}

type PlayerGame @entity {
  id: ID! # Set to `${game.id}-${player.id}`
  player: Player!
  game: Game!
}

type Game @entity {
  id: ID!
  intId: BigInt
  createdAt: BigInt
  createdBy: Bytes!
  startedAt: BigInt
  startsAt: BigInt
  type: GameType
  duration: BigInt
  endedAt: BigInt
  abortedAt: BigInt
  status: GameStatus!
  currentPlayers: BigInt!
  numPlayers: BigInt!
  entry: BigInt!
  numCoins: BigInt!
  isBitboyTeam: Boolean
  coinToPlay: Bytes!
  playerAddresses: [Bytes!]!
  affiliateIds: [String!]
  players: [PlayerGame!] @derivedFrom(field: "game")
  earnings: [Earning!] @derivedFrom(field: "game")
  withdraws: [Withdrawal!] @derivedFrom(field: "game")
  affiliates: [Affiliate!] @derivedFrom(field: "game")
}

type GameState @entity {
  id: ID!
  startedGames: [Bytes!]!
  totalStarted: BigInt!
  createdGames: [Bytes!]!
  totalCreated: BigInt!
}

type Player @entity {
  id: ID!
  totalWinnedGames: BigInt!
  totalFirstWinnedGames: BigInt!
  totalSecondWinnedGames: BigInt!
  totalThirdWinnedGames: BigInt!
  totalJoinedGames: BigInt!
  games: [PlayerGame!] @derivedFrom(field: "player")
  totalEarned: BigInt!
  totalSpent: BigInt!
  EarnedMinusSpent: BigInt!
  estimatedAffiliateEarnings: BigInt!
}

type Earning @entity {
  id: ID!
  player: Player!
  place: BigInt!
  amount: BigInt
  claimed: Boolean!
  at: BigInt
  game: Game!
}

type House @entity {
  id: ID!
  totalClaimed: BigInt!
  totalClaims: BigInt!
}

type HouseClaim @entity {
  id: ID!
  amount: BigInt
  claimed: Boolean!
  at: BigInt
  game: Game!
}

type Withdrawal @entity {
  id: ID!
  player: Player!
  at: BigInt
  game: Game!
}

type Affiliate @entity {
  id: ID!
  affiliate: Bytes!
  type: AffiliateType!
  status: AffiliateStatus!
  player: Player!
  createdAt: BigInt!
  game: Game!
}
